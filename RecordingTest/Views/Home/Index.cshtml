<!DOCTYPE HTML>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Chat by Web Sockets</title>
    <script type="text/javascript" src="/Scripts/recorder.js"></script>
    <script type="text/javascript" src="/Scripts/jquery-3.4.1.min.js"></script>
    <style type='text/css'></style>
</head>

<body>
    <audio controls autoplay></audio>
    <input type="button" id="record" value="Record">
    <input type="button" id="export" value="Export">
    <div id="message"></div>


    <script type="text/javascript">
        var rec;
        var sampleRate;
        var isRecording = false;

        var onFail = function (e) {
            console.log('Rejected!', e);
        };

        var onSuccess = function (s) {
            var context = new AudioContext();
            sampleRate = context.sampleRate;
            var mediaStreamSource = context.createMediaStreamSource(s);
            rec = new Recorder(mediaStreamSource);
        }

        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;


        function startRecording() {
            if (navigator.getUserMedia) {
                navigator.getUserMedia({ audio: true }, onSuccess, onFail);
            }
            else {
                console.log('navigator.getUserMedia not present');
            }
        }

        startRecording();
        //--------------------
        $('#record').click(function () {
            if (!isRecording) {
                isRecording = true;
                $('#record').attr("value", "Stop");
                rec.record();
                var dd = ws.send("start");
                $("#message").text("recording......");
                intervalKey = setInterval(function () {
                    rec.exportWAV(function (blob) {
                        rec.clear();
                        ws.send(blob);
                    });
                }, 1000);
            }
            else {
                isRecording = false;
                $('#record').attr("value", "Record");
                rec.stop();
                clearInterval(intervalKey);
                rec.exportWAV(function (blob) {
                    rec.clear();
                    ws.send(blob);
                    ws.send("stop-" + sampleRate);
                });
                $("#message").text("");
            }
        });

        $('#refresh').click(function () {
            refreshScript();
        });

        var ws = new WebSocket("ws://localhost:52910/api/connection/12345");
        ws.onopen = function () {
            console.log("Openened connection to websocket");
        };

        ws.onclose = function () {
            console.log("Close connection to websocket");
        }

        ws.onerror = function (env) {
            console.log("Error connection to websocket", env);
        }

        ws.onmessage = function (e) {
            var audio = document.querySelector('#audio-recorder');
            audio.src = e.data;
        }
    </script>
</body>
</html>